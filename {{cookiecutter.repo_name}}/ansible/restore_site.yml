---
- hosts: all
  user: {{cookiecutter.deploy_user_name }}
  vars:
    - backup_db: {{cookiecutter.repo_name}}.sql

{% raw %}
  tasks:

    - name: Copy the database backup up to host
      become: no 
      copy: src=files/{{ backup_db }} dest=/home/{{deploy_user}}/{{ backup_db }}
      tags:
          - dbrestore

    - name: Drop the default database 
      become: yes
      become_user: postgres
      postgresql_db: name={{ django_env.DB_NAME }}
                    state=absent
      tags:
         - dbrestore 

    - name: drop database user
      become: yes
      become_user: postgres
      postgresql_user: name={{ django_env.DB_USER }}
                       state=absent

    - name: Create a new db 
      become: yes
      become_user: postgres
      postgresql_db: name={{ django_env.DB_NAME }}
                    encoding='UTF-8'
                    lc_collate='en_US.UTF-8'
                    lc_ctype='en_US.UTF-8'
                    template='template0'
                    state=present
      tags:
         - dbrestore 

    - name: Ensure user has access to the database
      become: yes
      become_user: postgres
      postgresql_user: db={{ django_env.DB_NAME }}
                    name={{ django_env.DB_USER }}
                    password={{ django_env.DB_PASSWD }}
                    priv=ALL
                    state=present 
                    role_attr_flags=CREATEDB,SUPERUSER

      tags:
         - dbrestore 

    - name: Restore the database
      become: no 
      shell: /usr/bin/psql {{django_env.DB_NAME}} -f /home/{{deploy_user}}/{{ backup_db }}
      tags:
         - dbrestore 


    - name: Sync the media folders 
      become: no
      synchronize: src=files/media/ 
                  dest="{{ sites_dir }}/{{ project_name }}/media"
      tags:
         - rsync_media {% endraw %}
